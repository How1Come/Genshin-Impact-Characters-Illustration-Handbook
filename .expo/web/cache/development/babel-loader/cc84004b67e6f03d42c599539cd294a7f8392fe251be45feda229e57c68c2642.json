{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport characterData from \"./data/characters.json\";\nimport CharacterDetailScreen from \"./screens/CharacterDetailScreen.js\";\nimport Character1Image from \"./images/character1.jpg\";\nimport Character2Image from \"./images/character2.jpg\";\nimport Character3Image from \"./images/character3.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CharacterListScreen() {\n  var navigation = useNavigation();\n  var handleCharacterPress = function handleCharacterPress(character) {\n    navigation.navigate('CharacterDetail', {\n      character: character\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: characterData,\n      keyExtractor: function keyExtractor(character) {\n        return character.name;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleCharacterPress(item);\n          },\n          style: styles.characterContainer,\n          children: [_jsx(Image, {\n            source: getImageForCharacter(item),\n            style: styles.characterImage\n          }), _jsx(Text, {\n            style: styles.characterName,\n            children: item.name\n          })]\n        });\n      }\n    })\n  });\n}\nfunction getImageForCharacter(character) {\n  switch (character.id) {\n    case 1:\n      return Character1Image;\n    case 2:\n      return Character2Image;\n    case 3:\n      return Character3Image;\n    default:\n      return null;\n  }\n}\nvar styles = StyleSheet.create({\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  characterImage: {\n    width: 48,\n    height: 48,\n    marginRight: 16\n  },\n  characterName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"CharacterList\",\n        component: CharacterListScreen\n      }), _jsx(Stack.Screen, {\n        name: \"CharacterDetail\",\n        component: CharacterDetailScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","View","Text","FlatList","StyleSheet","Image","TouchableOpacity","useNavigation","NavigationContainer","createStackNavigator","characterData","CharacterDetailScreen","Character1Image","Character2Image","Character3Image","jsx","_jsx","jsxs","_jsxs","CharacterListScreen","navigation","handleCharacterPress","character","navigate","children","data","keyExtractor","name","renderItem","_ref","item","onPress","style","styles","characterContainer","source","getImageForCharacter","characterImage","characterName","id","create","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomWidth","borderBottomColor","width","height","marginRight","fontSize","fontWeight","Stack","App","Navigator","Screen","component"],"sources":["/Users/jimmy/Desktop/Genshin-Impact-Characters-Illustration-Handbook/App.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, FlatList, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport characterData from './data/characters.json';\nimport CharacterDetailScreen from './screens/CharacterDetailScreen.js';\n\nimport Character1Image from './images/character1.jpg';\nimport Character2Image from './images/character2.jpg';\nimport Character3Image from './images/character3.jpg';\n// import other character images as needed\n\nfunction CharacterListScreen() {\n  const navigation = useNavigation();\n\n  const handleCharacterPress = (character) => {\n    navigation.navigate('CharacterDetail', { character });\n  };\n\n  return (\n    <View>\n      <FlatList\n        data={characterData}\n        keyExtractor={(character) => character.name}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            onPress={() => handleCharacterPress(item)}\n            style={styles.characterContainer}\n          >\n            <Image source={getImageForCharacter(item)} style={styles.characterImage} />\n            <Text style={styles.characterName}>{item.name}</Text>\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n}\n\nfunction getImageForCharacter(character) {\n  switch (character.id) {\n    case 1:\n      return Character1Image;\n    case 2:\n      return Character2Image;\n    case 3:\n      return Character3Image;\n    // add other cases for other characters as needed\n    default:\n      return null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  characterImage: {\n    width: 48,\n    height: 48,\n    marginRight: 16,\n  },\n  characterName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"CharacterList\" component={CharacterListScreen} />\n        <Stack.Screen name=\"CharacterDetail\" component={CharacterDetailScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}