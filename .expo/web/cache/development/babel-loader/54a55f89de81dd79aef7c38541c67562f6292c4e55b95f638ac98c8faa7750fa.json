{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { useNavigation } from '@react-navigation/native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { Circle, Svg } from 'react-native-svg';\nimport characterData from \"./data/characters.json\";\nimport CharacterDetailScreen from \"./screens/CharacterDetailScreen.js\";\nimport SearchBar from \"./components/SearchBar.js\";\nimport TravelerImage from \"./images/Traveler.jpg\";\nimport VentiImage from \"./images/Venti.jpg\";\nimport DilucImage from \"./images/Diluc.jpg\";\nimport { ActivityIndicator } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CharacterListScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredCharacterData = _useState4[0],\n    setFilteredCharacterData = _useState4[1];\n  useEffect(function () {\n    setFilteredCharacterData(characterData.filter(function (character) {\n      return character.name.toLowerCase().includes(search.toLowerCase());\n    }));\n  }, [search]);\n  var handleCharacterPress = function handleCharacterPress(character) {\n    navigation.navigate('CharacterDetail', {\n      character: character\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(SearchBar, {\n      value: search,\n      onChangeText: setSearch\n    }), _jsx(FlatList, {\n      data: filteredCharacterData,\n      keyExtractor: function keyExtractor(character) {\n        return character.name;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleCharacterPress(item);\n          },\n          style: styles.characterContainer,\n          children: [_jsx(Image, {\n            source: getImageForCharacter(item),\n            style: styles.characterImage\n          }), _jsx(Text, {\n            style: styles.characterName,\n            children: item.name\n          })]\n        });\n      }\n    })]\n  });\n}\nfunction getImageForCharacter(character) {\n  switch (character.name) {\n    case 'Traveler':\n      return TravelerImage;\n    case 'Venti':\n      return VentiImage;\n    case 'Diluc':\n      return DilucImage;\n    default:\n      return null;\n  }\n}\nvar AppOpeningAnimation = function AppOpeningAnimation() {\n  var animatedValue = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    startAnimation();\n  }, []);\n  var startAnimation = function startAnimation() {\n    Animated.timing(animatedValue, {\n      toValue: 1,\n      duration: 2000,\n      easing: Easing.linear,\n      useNativeDriver: true\n    }).start();\n  };\n  var progress = animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%']\n  });\n  return _jsx(ActivityIndicator, {});\n};\nvar styles = StyleSheet.create({\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  characterImage: {\n    width: 48,\n    height: 48,\n    marginRight: 16\n  },\n  characterName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"AppOpeningAnimation\",\n        component: AppOpeningAnimation\n      }), _jsx(Stack.Screen, {\n        name: \"CharacterList\",\n        component: CharacterListScreen\n      }), _jsx(Stack.Screen, {\n        name: \"CharacterDetail\",\n        component: CharacterDetailScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","Image","TouchableOpacity","Keyboard","useNavigation","NavigationContainer","createStackNavigator","useRef","Animated","Easing","Circle","Svg","characterData","CharacterDetailScreen","SearchBar","TravelerImage","VentiImage","DilucImage","ActivityIndicator","jsx","_jsx","jsxs","_jsxs","CharacterListScreen","navigation","_useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","filteredCharacterData","setFilteredCharacterData","filter","character","name","toLowerCase","includes","handleCharacterPress","navigate","children","value","onChangeText","data","keyExtractor","renderItem","_ref","item","onPress","style","styles","characterContainer","source","getImageForCharacter","characterImage","characterName","AppOpeningAnimation","animatedValue","Value","current","startAnimation","timing","toValue","duration","easing","linear","useNativeDriver","start","progress","interpolate","inputRange","outputRange","create","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomWidth","borderBottomColor","width","height","marginRight","fontSize","fontWeight","Stack","App","Navigator","Screen","component"],"sources":["/Users/jimmy/Desktop/Genshin-Impact-Characters-Illustration-Handbook/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, StyleSheet, Image, TouchableOpacity, Keyboard } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useRef } from 'react';\nimport { Animated, Easing } from 'react-native';\nimport { Circle, Svg } from 'react-native-svg';\n\nimport characterData from './data/characters.json';\nimport CharacterDetailScreen from './screens/CharacterDetailScreen.js';\nimport SearchBar from './components/SearchBar.js';\n\nimport TravelerImage from './images/Traveler.jpg';\nimport VentiImage from './images/Venti.jpg';\nimport DilucImage from './images/Diluc.jpg';\nimport { ActivityIndicator } from 'react-native-paper';\n// import other character images as needed\n\nfunction CharacterListScreen() {\n  const navigation = useNavigation();\n  const [search, setSearch] = useState('');\n  const [filteredCharacterData, setFilteredCharacterData] = useState([]);\n\n  useEffect(() => {\n    setFilteredCharacterData(\n      characterData.filter((character) =>\n        character.name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search]);\n\n  const handleCharacterPress = (character) => {\n    navigation.navigate('CharacterDetail', { character });\n  };\n\n  return (\n    <View>\n      <SearchBar value={search} onChangeText={setSearch} />\n      <FlatList\n        data={filteredCharacterData}\n        keyExtractor={(character) => character.name}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            onPress={() => handleCharacterPress(item)}\n            style={styles.characterContainer}\n          >\n            <Image source={getImageForCharacter(item)} style={styles.characterImage} />\n            <Text style={styles.characterName}>{item.name}</Text>\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n}\n\nfunction getImageForCharacter(character) {\n  switch (character.name) {\n    case 'Traveler':\n      return TravelerImage;\n    case 'Venti':\n      return VentiImage;\n    case 'Diluc':\n      return DilucImage;\n    // add other cases for other characters as needed\n    default:\n      return null;\n  }\n}\n\nconst AppOpeningAnimation = () => {\n  const animatedValue = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    startAnimation();\n  }, []);\n\n  const startAnimation = () => {\n    Animated.timing(animatedValue, {\n      toValue: 1,\n      duration: 2000,\n      easing: Easing.linear,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const progress = animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%'],\n  });\n\n  return (\n    <ActivityIndicator />\n  );\n    \n};\n\n\nconst styles = StyleSheet.create({\n  characterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  characterImage: {\n    width: 48,\n    height: 48,\n    marginRight: 16,\n  },\n  characterName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"AppOpeningAnimation\" component={AppOpeningAnimation} />\n        <Stack.Screen name=\"CharacterList\" component={CharacterListScreen} />\n        <Stack.Screen name=\"CharacterDetail\" component={CharacterDetailScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}